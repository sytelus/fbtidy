
//----------------------------------------POPOVER-----------------------------------------------------------
// Popover form Footer (copied from modal-footer)
.popover-form-footer {
  margin-top: 5px;
  padding-top: 5px;
  text-align: right; // right align buttons
  border-top: 1px solid @modal-footer-border-color;
  .clearfix(); // clear it in case folks use .pull-* classes on buttons

  // Properly space out buttons
  .btn + .btn {
    margin-left: 5px;
    margin-bottom: 0; // account for input[type="submit"] which gets the bottom margin like all other inputs
  }
  // but override that for button groups
  .btn-group .btn + .btn {
    margin-left: -1px;
  }
  // and override it for block buttons as well
  .btn-block + .btn-block {
    margin-left: 0;
  }
}
// Popover form header
.popover-form-header {
  //border-bottom: 1px solid @modal-header-border-color;
}
// Close icon
.popover-form-header .close {
  margin-top: -2px;
}
//Popover form title
.popover-form-title {
  margin: 0;
  white-space:nowrap;
}
.popoverContainer .form-control {
    width:auto;
}
.popoverContainer .currencyInput {
    width: 8em;
}
.popoverFormTitleText {
    
}

//----------------------------------------statusBox-----------------------------------------------------------
.statusBox {
    position:fixed; width:90%; padding:5px; bottom:0px; overflow : auto;
}

.statusBox .alert {
    padding: 5px;
    margin: 1px;
    .small;
}

//----------------------------------------Bootstrap tooltip-----------------------------------------------------------
.tooltip-border-styles(@borderColor) {
    & + .tooltip {
        &.top .tooltip-arrow,
        &.top-left .tooltip-arrow,
        &.top-right .tooltip-arrow {
            border-top-color: @borderColor;
        }
        &.bottom .tooltip-arrow,
        &.bottom-left .tooltip-arrow,
        &.bottom-right .tooltip-arrow {
            border-bottom-color: @borderColor;
        }
        &.right .tooltip-arrow {
            border-right-color: @borderColor;
        }
        &.left .tooltip-arrow {
            border-left-color: @borderColor;
        }
    }
}

.tooltip-info {
  & + .tooltip .tooltip-inner {
    .alert-info;
  }
  .tooltip-border-styles(@alert-info-border);
}
.tooltip-danger {
  & + .tooltip .tooltip-inner {
    .alert-danger;
  }
  .tooltip-border-styles(@alert-danger-border);
}
.tooltip-warning {
  & + .tooltip .tooltip-inner {
    .alert-warning;
  }
  .tooltip-border-styles(@alert-warning-border);
}
.tooltip-success {
  & + .tooltip .tooltip-inner {
    .alert-success;
  }
  .tooltip-border-styles(@alert-success-border);
}

//This does not work because LESS can't call mixin name based on variable - http://stackoverflow.com/a/19603404/207661 
//.tooltip-styles(@list, @index: 1) when (isstring(extract(@list, @index))) {
//    @currentMember: extract(@list, @index);
//
//    .tooltip-@{currentMember} {
//        & + .tooltip .tooltip-inner {
//            (~".alert-@{currentMember}");
//        }
//        .tooltip-border-styles(~"@{alert-@{currentMember}-border}");
//    }
//
//    .tooltip-styles(@list, (@index + 1)); /* loop the next member */
//}
//
//.tooltip-styles(~"info", ~"danger", ~"warning", ~"success";);
